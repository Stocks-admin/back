name: Trigger Jenkins Build

on:
  release:
    types: [ published ]

jobs:
  build-image:
    name: Build docker image
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4

    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Build the Docker image
      run: |
        docker build . --file prod.Dockerfile --tag butter/back:latest \
                                           --tag butter/back:${{ github.event.release.tag_name }}

    - name: Push the Docker image (latest)
      run: docker push butter/back:latest

    - name: Push the Docker image (release tag)
      run: docker push butter/back:${{ github.event.release.tag_name }}
      
  trigger-jenkins:
    runs-on: ubuntu-latest
    needs: build-image
    name: Continuous integration
    steps:
    - name: Get Jenkins crumb
      id: get_crumb
      run: |
        CRUMB=$(curl -u "${{ secrets.JENKINS_USERNAME }}:${{ secrets.JENKINS_TOKEN }}" "https://jenkins.matiasduran.site/crumbIssuer/api/json" | jq -r .crumb)
        echo "JENKINS_CRUMB=$CRUMB" >> $GITHUB_ENV

    - name: Trigger Jenkins job
      run: |
        curl -X POST \
          --user "${{ secrets.JENKINS_USERNAME }}:${{ secrets.JENKINS_TOKEN }}" \
          -H "Jenkins-Crumb: ${{ env.JENKINS_CRUMB }}" \
          "https://jenkins.matiasduran.site/job/node-test/build"
    - name: Wait for Jenkins build to complete
      id: wait_for_jenkins
      run: |
        # URL para el build de Jenkins
        build_url="https://jenkins.matiasduran.site/job/node-test/lastBuild/api/json"          
          # Esperar hasta que Jenkins finalice el build
        while true; do
          # Consultar el estado del build
          build_status=$(curl -s $build_url --user ${{ secrets.JENKINS_USERNAME }}:${{ secrets.JENKINS_TOKEN }} | jq -r .result)
            
          if [[ "$build_status" == "SUCCESS" || "$build_status" == "FAILURE" || "$build_status" == "UNSTABLE" ]]; then
           echo "Jenkins build $build_status"
             break
          fi

          # Esperar 10 segundos antes de hacer otra consulta
          echo "Esperando que el build de Jenkins termine..."
          sleep 10
        done

    - name: Report the build status
      run: |
        if [[ "$build_status" == "SUCCESS" ]]; then
          echo "La construcción fue exitosa"
        elif [[ "$build_status" == "FAILURE" ]]; then
          echo "La construcción falló"
          exit 1
        else
          echo "La construcción terminó en un estado inestable"
          exit 1
        fi
