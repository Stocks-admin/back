generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["views"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model iol_token {
  token_id      Int      @id @default(autoincrement())
  access_token  String
  refresh_token String
  created_at    DateTime @default(now())
  expires_at    DateTime
}

model transactions {
  transaction_id   Int              @id @default(autoincrement())
  user_id          Int
  symbol           String?
  market           Market?
  transaction_type Transaction_type
  symbol_price     Float?
  amount_sold      Float
  transaction_date DateTime         @default(now())
}

enum Market {
  NYSE
  NASDAQ
  BCBA
  CEDEARS
}

model user {
  user_id    Int          @id @default(autoincrement())
  email      String       @unique
  password   String
  name       String
  phone      String?
  created    DateTime     @default(now())
  updated    DateTime     @default(now()) @updatedAt
  user_roles user_roles[]
}

model user_roles {
  user_id Int
  role    Role

  User user @relation(fields: [user_id], references: [user_id], onDelete: Cascade)

  @@id([user_id, role])
}

enum Role {
  ADMIN
  USER
}

model portfolio_snapshots {
  user_id Int
  symbol  String
  amount  Float
  market  Market
  date    DateTime @default(now())

  @@id([user_id, symbol, date])
}

model refresh_token {
  id          String   @id @unique @default(uuid())
  hashedToken String
  user_id     Int
  revoked     Boolean  @default(false)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@index([user_id], map: "user_id")
}

view portfolio_snapshots_updates {
  user_id Int
  symbol  String
  market  Market
  amount  Float?

  @@id([user_id, symbol])
}

enum Transaction_type {
  buy
  sell
}
